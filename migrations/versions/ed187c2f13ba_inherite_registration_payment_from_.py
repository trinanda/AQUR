"""inherite registration_payment from payment model

Revision ID: ed187c2f13ba
Revises: dd87315b1830
Create Date: 2019-10-10 14:24:46.325027

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'ed187c2f13ba'
down_revision = 'dd87315b1830'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('registration_payment', sa.Column('payment_id', sa.Integer(), nullable=True))
    op.drop_constraint('registration_payment_course_id_fkey', 'registration_payment', type_='foreignkey')
    op.drop_constraint('registration_payment_student_id_fkey', 'registration_payment', type_='foreignkey')
    op.create_foreign_key(None, 'registration_payment', 'payment', ['payment_id'], ['id'])
    op.drop_column('registration_payment', 'status_of_payment')
    op.drop_column('registration_payment', 'created_at')
    op.drop_column('registration_payment', 'course_id')
    op.drop_column('registration_payment', 'updated_at')
    op.drop_column('registration_payment', 'student_id')
    op.drop_column('registration_payment', 'total')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('registration_payment', sa.Column('total', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('registration_payment', sa.Column('student_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('registration_payment', sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('registration_payment', sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('registration_payment', sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('registration_payment', sa.Column('status_of_payment', postgresql.ENUM('PENDING', 'INSTALLMENT', 'REJECTED', 'COMPLETED', 'EXPIRED', name='status_of_payment'), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'registration_payment', type_='foreignkey')
    op.create_foreign_key('registration_payment_student_id_fkey', 'registration_payment', 'student', ['student_id'], ['id'])
    op.create_foreign_key('registration_payment_course_id_fkey', 'registration_payment', 'course', ['course_id'], ['id'])
    op.drop_column('registration_payment', 'payment_id')
    # ### end Alembic commands ###
